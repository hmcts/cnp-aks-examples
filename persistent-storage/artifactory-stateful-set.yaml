---
apiVersion: v1
kind: Namespace
metadata:
  name: artifactory-test
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: artifactory-oss-test
  namespace: artifactory-test
spec:
  serviceName: "artifactory"
  replicas: 2
  selector:
    matchLabels:
      app: artifactory-oss-test
  template:
    metadata:
      labels:
        app: artifactory-oss-test
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - artifactory-oss-test
            topologyKey: "kubernetes.io/hostname"
      initContainers:
      - name: artifactory-init
        image: hmcts/cnp-artifactory-init:0.1
        command: ['sh', '-c', 'mkdir -p /var/opt/jfrog/artifactory/etc; cp artifactory.config.xml /var/opt/jfrog/artifactory/etc/; chown -R 1030:1030 /var/opt/jfrog/artifactory; chmod -R 0700 /var/opt/jfrog/artifactory;']
        volumeMounts:
        - mountPath: "/var/opt/jfrog/artifactory"
          name: artifactory-data
      containers:
      - image: docker.bintray.io/jfrog/artifactory-oss:6.5.0
        name: artifactory-oss-test
        env:
          - name: EXTRA_JAVA_OPTIONS
            value: '-Xms2g -Xmx8g'
        resources:
          requests:
            memory: "1024Mi"
            cpu: "1000m"
          limits:
            memory: "8192Mi"
            cpu: "3000m"
        ports:
        - containerPort: 8081
          name: http
        readinessProbe:
          httpGet: 
            port: 8081
            path: / 
            scheme: HTTP
          initialDelaySeconds: 3
          periodSeconds: 5
          successThreshold: 1
          failureThreshold: 1
          timeoutSeconds: 1
        imagePullPolicy: Always
        volumeMounts:
        - mountPath: "/var/opt/jfrog/artifactory"
          name: artifactory-data
  volumeClaimTemplates:
  - metadata:
      name: artifactory-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "managed-premium"
      resources:
        requests:
          storage: 5Gi
---
#
# Service
#
apiVersion: v1
kind: Service
metadata:
  name: artifactory-oss-test
  namespace: artifactory-test
  annotations:
    traefik.ingress.kubernetes.io/affinity: "true"
  labels:
    app: artifactory-oss-test
spec:
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 8081
  clusterIP: None
  selector:
    app: artifactory-oss-test
---
#
# Ingress
#
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: artifactory-oss-test
  namespace: artifactory-test
  annotations:
    kubernetes.io/ingress.class: traefik
spec:
  rules:
  - host: artifactorytest.service.core-compute-saat.internal
    http:
      paths:
      - path: /
        backend:
          serviceName: artifactory-oss-test
          servicePort: 80